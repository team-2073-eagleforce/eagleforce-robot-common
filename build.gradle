buildscript {

    ext.kotlin_version = '1.3.61'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath ("org.junit.platform:junit-platform-gradle-plugin:1.1.0")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
////        classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.6'
//        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.15'
    }
}

plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "edu.wpi.first.GradleRIO" version "2020.3.2"
    id "maven-publish"
//    id 'org.asciidoctor.convert' version '1.5.8.1'
}

apply plugin: 'org.asciidoctor.convert'

group 'com.team2073'

version commonVersion

repositories {
    mavenCentral()
    mavenLocal()
}

wrapper {
    gradleVersion = '6.0'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        myRootPublication(MavenPublication) {
//            Defined by 'group' and 'version' above
//            groupId 'com.team2073'
//            artifactId 'eagleforce-robot-common'
//            version commonVersion

            artifact sourceJar {
                classifier "sources"
            }

            from components.java
        }
    }
}

//jar {
//    manifest {
//        // No need to define main class
//    }
//
//    from {
//        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}


evaluationDependsOnChildren()

publishToMavenLocal {
    dependsOn project(":common-util").tasks.publishToMavenLocal
//    dependsOn project(":common-wpi-util").tasks.publishToMavenLocal
//    dependsOn project(":common-wpi-simulation").tasks.publishToMavenLocal
}

// TODO: Get the transitive dependencies to work properly. Currently the IntelliJ run configs are handling this for us
//project(":common-wpi-simulation").tasks.publishToMavenLocal {
//    dependsOn project(":common-wpi-util").tasks.publishToMavenLocal
//}
//
//project(":common-wpi-util").tasks.publishToMavenLocal {
//    dependsOn project(":common-util").tasks.publishToMavenLocal
//}
//
//project(":common-guice").tasks.publishToMavenLocal {
//    dependsOn project(":common-util").tasks.publishToMavenLocal
//}

//asciidoctorj {
//    version = '1.5.5'
//}
//
//asciidoctor {
////    backends 'html5', 'pdf', 'epub3', 'docbook'
//    backends 'html5', 'pdf' //, 'docbook'
//    attributes 'source-highlighter': 'prettify'
////    backends 'pdf'
//
//}
subprojects {

// Project name defined in settings.gradle > rootProject.name
    group 'com.team2073'
    version commonVersion
    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        // TODO: Apply to all projects except util
//        compile group: 'com.team2073', name: 'common-util', version: commonVersion
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
        compile group: 'org.mockito', name: 'mockito-core', version: '2.15.0'
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

        testCompile('org.jetbrains:annotations:13.0') // trying to fix *_test.iml files from changing lines around
        testCompile("org.assertj:assertj-core:3.9.1")
        testCompile("org.mockito:mockito-junit-jupiter:2.17.0")
        testCompile("org.junit.jupiter:junit-jupiter-api:5.2.0")
        testCompile("org.junit.jupiter:junit-jupiter-engine:5.2.0")
    }

    wrapper {
        gradleVersion = '6.0'
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
    }

    publishing {
        publications {
            myPublication(MavenPublication) {
//            Defined by 'group' and 'version' above
//            groupId 'com.team2073'
//            artifactId 'eagleforce-robot-common'
//            version commonVersion

                artifact sourceJar {
                    classifier "sources"
                }

                from components.java
            }
        }
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}